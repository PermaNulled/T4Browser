// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: t4browser.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Pack {

  /// <summary>Holder for reflection information generated from t4browser.proto</summary>
  public static partial class T4BrowserReflection {

    #region Descriptor
    /// <summary>File descriptor for t4browser.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static T4BrowserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg90NGJyb3dzZXIucHJvdG8i8gEKBlBhY2tldBIaCgR0eXBlGAEgASgOMgwu",
            "UGFja2V0LlR5cGUSHgoNcGxheWVyX3N0YXR1cxgCIAEoCzIHLnBsYXllchIa",
            "CgRjaGF0GAMgASgLMgwuY2hhdF9wYWNrZXQSIgoObG9iYnlfc25hcHNob3QY",
            "BCABKAsyCi5ob3N0X3NuYXAibAoEVHlwZRILCgdpbnZhbGlkEAASEAoMam9p",
            "bl9tZXNzYWdlEAESEAoMY2hhdF9tZXNzYWdlEAISEQoNaG9zdF9zbmFwc2hv",
            "dBADEhAKDHF1aXRfbWVzc2FnZRAEEg4KCnN0YXJ0X2dhbWUQBSIbCgtqb2lu",
            "X3BhY2tldBIMCgRuYW1lGAEgASgJIiwKC2NoYXRfcGFja2V0EgwKBG5hbWUY",
            "ASABKAkSDwoHbWVzc2FnZRgCIAEoCSIWCgZwbGF5ZXISDAoEbmFtZRgBIAEo",
            "CSKcAQoLZ2FtZV9vcHRpb24SJgoLb3B0aW9uX3R5cGUYASABKA4yES5nYW1l",
            "X29wdGlvbi5UeXBlEg0KBWluZGV4GAIgASgFEg4KBm9wdGlvbhgDIAEoCCJG",
            "CgRUeXBlEgsKB2ludmFsaWQQABIQCgxvV2VhcG9uQXZhaWwQARIQCgxvV2Vh",
            "cG9uU3Bhd24QAhINCglvR2FtZVBsYXkQAyLzAQoJaG9zdF9zbmFwEiIKCXNu",
            "YXBfdHlwZRgBIAEoDjIPLmhvc3Rfc25hcC5UeXBlEhAKCG1hcF9uYW1lGAIg",
            "ASgJEhEKCWdhbWVfdHlwZRgDIAEoBRISCgpmcmFnX2xpbWl0GAQgASgFEhIK",
            "CnRpbWVfbGltaXQYBSABKAUSDgoGbWFwX2lkGAYgASgFEh0KB29wdGlvbnMY",
            "ByADKAsyDC5nYW1lX29wdGlvbhIYCgdwbGF5ZXJzGAggAygLMgcucGxheWVy",
            "IiwKBFR5cGUSDAoIdEludmFsaWQQABIJCgV0Sm9pbhABEgsKB3RVcGRhdGUQ",
            "AkIXqgIUR29vZ2xlLlByb3RvYnVmLlBhY2tiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.Packet), global::Google.Protobuf.Pack.Packet.Parser, new[]{ "Type", "PlayerStatus", "Chat", "LobbySnapshot" }, null, new[]{ typeof(global::Google.Protobuf.Pack.Packet.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.join_packet), global::Google.Protobuf.Pack.join_packet.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.chat_packet), global::Google.Protobuf.Pack.chat_packet.Parser, new[]{ "Name", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.player), global::Google.Protobuf.Pack.player.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.game_option), global::Google.Protobuf.Pack.game_option.Parser, new[]{ "OptionType", "Index", "Option" }, null, new[]{ typeof(global::Google.Protobuf.Pack.game_option.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Pack.host_snap), global::Google.Protobuf.Pack.host_snap.Parser, new[]{ "SnapType", "MapName", "GameType", "FragLimit", "TimeLimit", "MapId", "Options", "Players" }, null, new[]{ typeof(global::Google.Protobuf.Pack.host_snap.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Packet : pb::IMessage<Packet> {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      type_ = other.type_;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      chat_ = other.chat_ != null ? other.chat_.Clone() : null;
      lobbySnapshot_ = other.lobbySnapshot_ != null ? other.lobbySnapshot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Protobuf.Pack.Packet.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.Packet.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "player_status" field.</summary>
    public const int PlayerStatusFieldNumber = 2;
    private global::Google.Protobuf.Pack.player playerStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.player PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "chat" field.</summary>
    public const int ChatFieldNumber = 3;
    private global::Google.Protobuf.Pack.chat_packet chat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.chat_packet Chat {
      get { return chat_; }
      set {
        chat_ = value;
      }
    }

    /// <summary>Field number for the "lobby_snapshot" field.</summary>
    public const int LobbySnapshotFieldNumber = 4;
    private global::Google.Protobuf.Pack.host_snap lobbySnapshot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.host_snap LobbySnapshot {
      get { return lobbySnapshot_; }
      set {
        lobbySnapshot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (!object.Equals(Chat, other.Chat)) return false;
      if (!object.Equals(LobbySnapshot, other.LobbySnapshot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (chat_ != null) hash ^= Chat.GetHashCode();
      if (lobbySnapshot_ != null) hash ^= LobbySnapshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerStatus);
      }
      if (chat_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Chat);
      }
      if (lobbySnapshot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LobbySnapshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (chat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chat);
      }
      if (lobbySnapshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LobbySnapshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          playerStatus_ = new global::Google.Protobuf.Pack.player();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.chat_ != null) {
        if (chat_ == null) {
          chat_ = new global::Google.Protobuf.Pack.chat_packet();
        }
        Chat.MergeFrom(other.Chat);
      }
      if (other.lobbySnapshot_ != null) {
        if (lobbySnapshot_ == null) {
          lobbySnapshot_ = new global::Google.Protobuf.Pack.host_snap();
        }
        LobbySnapshot.MergeFrom(other.LobbySnapshot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Google.Protobuf.Pack.Packet.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (playerStatus_ == null) {
              playerStatus_ = new global::Google.Protobuf.Pack.player();
            }
            input.ReadMessage(playerStatus_);
            break;
          }
          case 26: {
            if (chat_ == null) {
              chat_ = new global::Google.Protobuf.Pack.chat_packet();
            }
            input.ReadMessage(chat_);
            break;
          }
          case 34: {
            if (lobbySnapshot_ == null) {
              lobbySnapshot_ = new global::Google.Protobuf.Pack.host_snap();
            }
            input.ReadMessage(lobbySnapshot_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Packet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("invalid")] Invalid = 0,
        [pbr::OriginalName("join_message")] JoinMessage = 1,
        [pbr::OriginalName("chat_message")] ChatMessage = 2,
        [pbr::OriginalName("host_snapshot")] HostSnapshot = 3,
        [pbr::OriginalName("quit_message")] QuitMessage = 4,
        [pbr::OriginalName("start_game")] StartGame = 5,
      }

    }
    #endregion

  }

  public sealed partial class join_packet : pb::IMessage<join_packet> {
    private static readonly pb::MessageParser<join_packet> _parser = new pb::MessageParser<join_packet>(() => new join_packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<join_packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public join_packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public join_packet(join_packet other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public join_packet Clone() {
      return new join_packet(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as join_packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(join_packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(join_packet other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class chat_packet : pb::IMessage<chat_packet> {
    private static readonly pb::MessageParser<chat_packet> _parser = new pb::MessageParser<chat_packet>(() => new chat_packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<chat_packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chat_packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chat_packet(chat_packet other) : this() {
      name_ = other.name_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chat_packet Clone() {
      return new chat_packet(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as chat_packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(chat_packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(chat_packet other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class player : pb::IMessage<player> {
    private static readonly pb::MessageParser<player> _parser = new pb::MessageParser<player>(() => new player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public player(player other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public player Clone() {
      return new player(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(player other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class game_option : pb::IMessage<game_option> {
    private static readonly pb::MessageParser<game_option> _parser = new pb::MessageParser<game_option>(() => new game_option());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<game_option> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public game_option() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public game_option(game_option other) : this() {
      optionType_ = other.optionType_;
      index_ = other.index_;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public game_option Clone() {
      return new game_option(this);
    }

    /// <summary>Field number for the "option_type" field.</summary>
    public const int OptionTypeFieldNumber = 1;
    private global::Google.Protobuf.Pack.game_option.Types.Type optionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.game_option.Types.Type OptionType {
      get { return optionType_; }
      set {
        optionType_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 3;
    private bool option_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Option {
      get { return option_; }
      set {
        option_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as game_option);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(game_option other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptionType != other.OptionType) return false;
      if (Index != other.Index) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OptionType != 0) hash ^= OptionType.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Option != false) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OptionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OptionType);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (Option != false) {
        output.WriteRawTag(24);
        output.WriteBool(Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OptionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptionType);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Option != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(game_option other) {
      if (other == null) {
        return;
      }
      if (other.OptionType != 0) {
        OptionType = other.OptionType;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Option != false) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            optionType_ = (global::Google.Protobuf.Pack.game_option.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            Option = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the game_option message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("invalid")] Invalid = 0,
        [pbr::OriginalName("oWeaponAvail")] OWeaponAvail = 1,
        [pbr::OriginalName("oWeaponSpawn")] OWeaponSpawn = 2,
        [pbr::OriginalName("oGamePlay")] OGamePlay = 3,
      }

    }
    #endregion

  }

  public sealed partial class host_snap : pb::IMessage<host_snap> {
    private static readonly pb::MessageParser<host_snap> _parser = new pb::MessageParser<host_snap>(() => new host_snap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<host_snap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Pack.T4BrowserReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public host_snap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public host_snap(host_snap other) : this() {
      snapType_ = other.snapType_;
      mapName_ = other.mapName_;
      gameType_ = other.gameType_;
      fragLimit_ = other.fragLimit_;
      timeLimit_ = other.timeLimit_;
      mapId_ = other.mapId_;
      options_ = other.options_.Clone();
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public host_snap Clone() {
      return new host_snap(this);
    }

    /// <summary>Field number for the "snap_type" field.</summary>
    public const int SnapTypeFieldNumber = 1;
    private global::Google.Protobuf.Pack.host_snap.Types.Type snapType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Pack.host_snap.Types.Type SnapType {
      get { return snapType_; }
      set {
        snapType_ = value;
      }
    }

    /// <summary>Field number for the "map_name" field.</summary>
    public const int MapNameFieldNumber = 2;
    private string mapName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapName {
      get { return mapName_; }
      set {
        mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_type" field.</summary>
    public const int GameTypeFieldNumber = 3;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "frag_limit" field.</summary>
    public const int FragLimitFieldNumber = 4;
    private int fragLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FragLimit {
      get { return fragLimit_; }
      set {
        fragLimit_ = value;
      }
    }

    /// <summary>Field number for the "time_limit" field.</summary>
    public const int TimeLimitFieldNumber = 5;
    private int timeLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeLimit {
      get { return timeLimit_; }
      set {
        timeLimit_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 6;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Pack.game_option> _repeated_options_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Protobuf.Pack.game_option.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Pack.game_option> options_ = new pbc::RepeatedField<global::Google.Protobuf.Pack.game_option>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Pack.game_option> Options {
      get { return options_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Pack.player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Protobuf.Pack.player.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Pack.player> players_ = new pbc::RepeatedField<global::Google.Protobuf.Pack.player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Pack.player> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as host_snap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(host_snap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnapType != other.SnapType) return false;
      if (MapName != other.MapName) return false;
      if (GameType != other.GameType) return false;
      if (FragLimit != other.FragLimit) return false;
      if (TimeLimit != other.TimeLimit) return false;
      if (MapId != other.MapId) return false;
      if(!options_.Equals(other.options_)) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnapType != 0) hash ^= SnapType.GetHashCode();
      if (MapName.Length != 0) hash ^= MapName.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (FragLimit != 0) hash ^= FragLimit.GetHashCode();
      if (TimeLimit != 0) hash ^= TimeLimit.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      hash ^= options_.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnapType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SnapType);
      }
      if (MapName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MapName);
      }
      if (GameType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GameType);
      }
      if (FragLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FragLimit);
      }
      if (TimeLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TimeLimit);
      }
      if (MapId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MapId);
      }
      options_.WriteTo(output, _repeated_options_codec);
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnapType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SnapType);
      }
      if (MapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (FragLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FragLimit);
      }
      if (TimeLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeLimit);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(host_snap other) {
      if (other == null) {
        return;
      }
      if (other.SnapType != 0) {
        SnapType = other.SnapType;
      }
      if (other.MapName.Length != 0) {
        MapName = other.MapName;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.FragLimit != 0) {
        FragLimit = other.FragLimit;
      }
      if (other.TimeLimit != 0) {
        TimeLimit = other.TimeLimit;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      options_.Add(other.options_);
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            snapType_ = (global::Google.Protobuf.Pack.host_snap.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            MapName = input.ReadString();
            break;
          }
          case 24: {
            GameType = input.ReadInt32();
            break;
          }
          case 32: {
            FragLimit = input.ReadInt32();
            break;
          }
          case 40: {
            TimeLimit = input.ReadInt32();
            break;
          }
          case 48: {
            MapId = input.ReadInt32();
            break;
          }
          case 58: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 66: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the host_snap message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("tInvalid")] TInvalid = 0,
        [pbr::OriginalName("tJoin")] TJoin = 1,
        [pbr::OriginalName("tUpdate")] TUpdate = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
